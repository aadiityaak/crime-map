name: Tests & Linting

on:
  push:
    branches:
      - develop
      - main
  pull_request:
    branches:
      - develop
      - main

jobs:
  lint:
    name: Code Quality & Linting
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.4
          tools: composer:v2, phpcs, phpstan
          coverage: none

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install Node Dependencies
        run: npm ci

      - name: Install PHP Dependencies
        run: composer install --no-interaction --prefer-dist --optimize-autoloader

      - name: Check PHP Code Style (Laravel Pint)
        run: ./vendor/bin/pint --test

      - name: ESLint Check
        run: npm run lint:check

      - name: Prettier Format Check
        run: npm run format:check

      - name: TypeScript Type Check
        run: npx vue-tsc --noEmit

  test:
    name: Feature & Unit Tests
    runs-on: ubuntu-latest
    needs: lint

    strategy:
      matrix:
        php-version: [8.3, 8.4]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          tools: composer:v2
          coverage: xdebug
          extensions: pdo, sqlite, pdo_sqlite

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install Node Dependencies
        run: npm ci

      - name: Install PHP Dependencies
        run: composer install --no-interaction --prefer-dist --optimize-autoloader

      - name: Copy Environment File
        run: cp .env.example .env

      - name: Generate Application Key
        run: php artisan key:generate

      - name: Create Database
        run: touch database/database.sqlite

      - name: Run Database Migrations
        run: php artisan migrate --force

      - name: Seed Database
        run: php artisan db:seed --force

      - name: Publish Ziggy Configuration
        run: php artisan ziggy:generate

      - name: Build Assets
        run: npm run build

      - name: Run PHPUnit Tests
        run: ./vendor/bin/phpunit --coverage-clover coverage.xml

      - name: Upload Coverage to Codecov
        if: matrix.php-version == '8.4'
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
